{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatRuntime(milliseconds: number): string {\n  if (milliseconds < 1000) {\n    return `${milliseconds}ms`;\n  }\n  return `${(milliseconds / 1000).toFixed(2)}s`;\n}\n\nexport function formatMemory(bytes: number): string {\n  if (bytes < 1024) {\n    return `${bytes}B`;\n  }\n  if (bytes < 1024 * 1024) {\n    return `${(bytes / 1024).toFixed(1)}KB`;\n  }\n  return `${(bytes / (1024 * 1024)).toFixed(1)}MB`;\n}\n\nexport function getDifficultyColor(difficulty: string): string {\n  switch (difficulty) {\n    case 'easy':\n      return 'text-green-600 bg-green-50 border-green-200';\n    case 'medium':\n      return 'text-yellow-600 bg-yellow-50 border-yellow-200';\n    case 'hard':\n      return 'text-red-600 bg-red-50 border-red-200';\n    default:\n      return 'text-gray-600 bg-gray-50 border-gray-200';\n  }\n}\n\nexport function getDifficultyLabel(difficulty: string): string {\n  switch (difficulty) {\n    case 'easy':\n      return 'Easy';\n    case 'medium':\n      return 'Medium';\n    case 'hard':\n      return 'Hard';\n    default:\n      return 'Unknown';\n  }\n}\n\nexport function sanitizeCodeForAI(code: string): string {\n  // Remove comments, extra whitespace, and potentially sensitive patterns\n  return code\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '') // Remove block comments\n    .replace(/\\/\\/.*$/gm, '') // Remove line comments\n    .replace(/\\s+/g, ' ') // Normalize whitespace\n    .trim();\n}\n\nexport function detectCodeViolation(content: string): {\n  hasViolation: boolean;\n  reason?: string;\n  maskedContent?: string;\n} {\n  // Heuristics to detect full code solutions\n  const codeBlocks = content.match(/```[\\s\\S]*?```/g) || [];\n  \n  // Check for long contiguous code blocks\n  for (const block of codeBlocks) {\n    const blockLines = block.split('\\n').length;\n    if (blockLines > 20) {\n      return {\n        hasViolation: true,\n        reason: 'Long code block detected',\n        maskedContent: content.replace(block, '```\\n[Full solution withheld by policy]\\n```')\n      };\n    }\n  }\n  \n  // Check for multiple function/class definitions\n  const functionCount = (content.match(/function\\s+\\w+|class\\s+\\w+|const\\s+\\w+\\s*=\\s*\\(/g) || []).length;\n  if (functionCount > 3) {\n    return {\n      hasViolation: true,\n      reason: 'Multiple function definitions detected',\n      maskedContent: content.replace(/```[\\s\\S]*?```/g, '```\\n[Full solution withheld by policy]\\n```')\n    };\n  }\n  \n  // Check for complete solution patterns\n  const hasMainFunction = /int\\s+main\\s*\\(|def\\s+main\\s*\\(|function\\s+main\\s*\\(/.test(content);\n  const hasReturnStatement = /return\\s+/.test(content);\n  const hasPrintOutput = /console\\.log|print\\s*\\(|System\\.out\\.print/.test(content);\n  \n  if (hasMainFunction && hasReturnStatement && hasPrintOutput) {\n    return {\n      hasViolation: true,\n      reason: 'Complete solution pattern detected',\n      maskedContent: content.replace(/```[\\s\\S]*?```/g, '```\\n[Full solution withheld by policy]\\n```')\n    };\n  }\n  \n  return { hasViolation: false };\n}\n\nexport function generateProblemSlug(title: string): string {\n  return title\n    .toLowerCase()\n    .replace(/[^a-z0-9\\s-]/g, '')\n    .replace(/\\s+/g, '-')\n    .replace(/-+/g, '-')\n    .trim();\n}\n\nexport function formatDate(date: string | Date): string {\n  const d = new Date(date);\n  return d.toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n}\n\nexport function debounce<T extends (...args: unknown[]) => unknown>(\n  func: T,\n  wait: number\n): (...args: Parameters<T>) => void {\n  let timeout: NodeJS.Timeout;\n  return (...args: Parameters<T>) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => func(...args), wait);\n  };\n}\n\nexport function throttle<T extends (...args: unknown[]) => unknown>(\n  func: T,\n  limit: number\n): (...args: Parameters<T>) => void {\n  let inThrottle: boolean;\n  return (...args: Parameters<T>) => {\n    if (!inThrottle) {\n      func(...args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/components/editor/editor-wrapper.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { cn } from '../../lib/utils';\nimport type { EditorConfig, RunResult } from '../../types';\nimport { useAppStore } from '../../lib/store';\n// Import Monaco types only, not the runtime\nimport type * as monaco from 'monaco-editor';\n\n// Dynamically import Monaco Editor to avoid SSR issues\nconst MonacoEditor = dynamic(() => import('@monaco-editor/react'), {\n  ssr: false,\n  loading: () => (\n    <div className=\"flex items-center justify-center h-64 bg-gray-50\">\n      <div className=\"text-gray-500\">Loading editor...</div>\n    </div>\n  ),\n});\n\ninterface EditorWrapperProps {\n  initialCode?: string;\n  language?: string;\n  onChange?: (code: string) => void;\n  onRun?: (code: string, language: string) => Promise<RunResult>;\n  onSave?: (code: string) => void;\n  className?: string;\n  readOnly?: boolean;\n  problemId?: string;\n}\n\nconst languageMap: Record<string, string> = {\n  javascript: 'javascript',\n  typescript: 'typescript',\n  python: 'python',\n  java: 'java',\n  cpp: 'cpp',\n  c: 'c',\n  csharp: 'csharp',\n  go: 'go',\n  rust: 'rust',\n  php: 'php',\n  ruby: 'ruby',\n  swift: 'swift',\n  kotlin: 'kotlin',\n};\n\nexport function EditorWrapper({\n  initialCode = '',\n  language = 'javascript',\n  onChange,\n  onRun,\n  onSave,\n  className,\n  readOnly = false,\n  problemId,\n}: EditorWrapperProps) {\n  const { theme } = useAppStore();\n  const [code, setCode] = useState(initialCode);\n  const [isRunning, setIsRunning] = useState(false);\n  const [lastRunResult, setLastRunResult] = useState<RunResult | null>(null);\n  const [currentLanguage, setCurrentLanguage] = useState(language);\n  const [editorHeight, setEditorHeight] = useState('100%');\n  const editorRef = useRef<monaco.editor.IStandaloneCodeEditor | null>(null);\n  const [editorConfig, setEditorConfig] = useState<EditorConfig>({\n    language: languageMap[language] || 'javascript',\n    theme: theme === 'dark' ? 'vs-dark' : 'vs-light',\n    fontSize: 14,\n    tabSize: 2,\n    wordWrap: 'on',\n    minimap: { enabled: false },\n  });\n\n  // Update theme when it changes\n  useEffect(() => {\n    setEditorConfig(prev => ({\n      ...prev,\n      theme: theme === 'dark' ? 'vs-dark' : 'vs-light',\n    }));\n  }, [theme]);\n\n  // Update language when it changes\n  useEffect(() => {\n    setCurrentLanguage(language);\n    setEditorConfig(prev => ({\n      ...prev,\n      language: languageMap[language] || 'javascript',\n    }));\n    \n    // Update the editor language if it's mounted (client-side only)\n    if (typeof window !== 'undefined' && editorRef.current && editorRef.current.getModel()) {\n      import('monaco-editor').then((monaco) => {\n        monaco.editor.setModelLanguage(editorRef.current!.getModel()!, languageMap[language] || 'javascript');\n      });\n    }\n  }, [language]);\n\n  // Auto-save functionality\n  useEffect(() => {\n    if (!problemId || readOnly) return;\n    \n    const autoSave = () => {\n      if (onSave && code !== initialCode) {\n        onSave(code);\n      }\n    };\n    \n    const timeoutId = setTimeout(autoSave, 2000); // Auto-save after 2 seconds of inactivity\n    return () => clearTimeout(timeoutId);\n  }, [code, problemId, onSave, initialCode, readOnly]);\n\n  // Load saved code from localStorage\n  useEffect(() => {\n    if (!problemId || readOnly) return;\n    \n    const savedCode = localStorage.getItem(`editor-${problemId}`);\n    if (savedCode && savedCode !== initialCode) {\n      setCode(savedCode);\n    }\n  }, [problemId, initialCode, readOnly]);\n\n  // Calculate initial height based on code content\n  useEffect(() => {\n    const lineCount = code.split('\\n').length;\n    const lineHeight = 21; // Approximate line height\n    const padding = 16; // Top and bottom padding\n    const calculatedHeight = Math.min(lineCount * lineHeight + padding, 800);\n    setEditorHeight(`${calculatedHeight}px`);\n  }, [code]);\n\n  const handleEditorChange = (value: string | undefined) => {\n    const newCode = value || '';\n    setCode(newCode);\n    onChange?.(newCode);\n    \n    // Calculate optimal height based on content\n    if (editorRef.current) {\n      const lineCount = newCode.split('\\n').length;\n      const lineHeight = 21; // Approximate line height\n      const padding = 16; // Top and bottom padding\n      const calculatedHeight = Math.min(lineCount * lineHeight + padding, 800);\n      setEditorHeight(`${calculatedHeight}px`);\n    }\n  };\n\n  const handleRun = async () => {\n    if (!onRun || isRunning) return;\n    \n    setIsRunning(true);\n    try {\n      const result = await onRun(code, language);\n      setLastRunResult(result);\n    } catch (error) {\n      console.error('Run failed:', error);\n      setLastRunResult({\n        success: false,\n        output: '',\n        error: error instanceof Error ? error.message : 'Unknown error',\n        testResults: [],\n      });\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const handleSave = () => {\n    if (onSave) {\n      onSave(code);\n    }\n  };\n\n  const handleEditorDidMount = (editor: monaco.editor.IStandaloneCodeEditor) => {\n    editorRef.current = editor;\n    \n    // Prevent auto-scroll to bottom\n    editor.setScrollTop(0);\n    editor.setPosition({ lineNumber: 1, column: 1 });\n    \n    // Add keyboard shortcuts - use numeric constants to avoid import issues\n    editor.addCommand(1 | 3, () => { // Ctrl/Cmd + Enter\n      handleRun();\n    });\n    \n    editor.addCommand(1 | 49, (e: monaco.IKeyboardEvent) => { // Ctrl/Cmd + S\n      e.preventDefault();\n      handleSave();\n    });\n\n    // Ensure Enter key creates new lines and doesn't submit forms\n    // Monaco Editor handles Enter key by default for new lines\n  };\n\n  return (\n    <div className={cn(\"flex flex-col h-full bg-white dark:bg-slate-800\", className)}>\n      {/* Editor Toolbar */}\n      <div className=\"flex items-center justify-between p-3 border-b bg-gray-50 dark:bg-slate-700 border-gray-200 dark:border-slate-600\">\n        <div className=\"flex items-center gap-2\">\n          <select\n            value={currentLanguage}\n            onChange={(e) => {\n              const newLanguage = e.target.value;\n              setCurrentLanguage(newLanguage);\n              setEditorConfig(prev => ({\n                ...prev,\n                language: languageMap[newLanguage] || 'javascript',\n              }));\n              // Update the editor language if it's mounted (client-side only)\n              if (typeof window !== 'undefined' && editorRef.current && editorRef.current.getModel()) {\n                import('monaco-editor').then((monaco) => {\n                  monaco.editor.setModelLanguage(editorRef.current!.getModel()!, languageMap[newLanguage] || 'javascript');\n                });\n              }\n            }}\n            className=\"px-2 py-1 text-sm border border-gray-300 dark:border-slate-600 rounded bg-white dark:bg-slate-800 text-slate-900 dark:text-slate-100\"\n            disabled={readOnly}\n          >\n            <option value=\"javascript\">JavaScript</option>\n            <option value=\"typescript\">TypeScript</option>\n            <option value=\"python\">Python</option>\n            <option value=\"java\">Java</option>\n            <option value=\"cpp\">C++</option>\n            <option value=\"c\">C</option>\n            <option value=\"csharp\">C#</option>\n            <option value=\"go\">Go</option>\n            <option value=\"rust\">Rust</option>\n            <option value=\"php\">PHP</option>\n            <option value=\"ruby\">Ruby</option>\n            <option value=\"swift\">Swift</option>\n            <option value=\"kotlin\">Kotlin</option>\n          </select>\n          \n          {!readOnly && (\n            <button\n              onClick={handleSave}\n              className=\"px-3 py-1 text-sm bg-blue-500 text-white rounded hover:bg-blue-600\"\n            >\n              Save\n            </button>\n          )}\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {!readOnly && (\n            <button\n              onClick={handleRun}\n              disabled={isRunning}\n              className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600 disabled:opacity-50\"\n            >\n              {isRunning ? 'Running...' : 'Run Tests'}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Editor */}\n      <div \n        className=\"flex-1 min-h-0 max-h-[800px] overflow-y-auto\"\n        tabIndex={-1}\n        onKeyDown={(e) => {\n          // Prevent form submission on Enter key\n          if (e.key === 'Enter' && !e.ctrlKey && !e.metaKey) {\n            e.stopPropagation();\n          }\n        }}\n      >\n        <MonacoEditor\n          height={editorHeight}\n          language={editorConfig.language}\n          theme={editorConfig.theme}\n          value={code}\n          onChange={handleEditorChange}\n          onMount={handleEditorDidMount}\n          options={{\n            fontSize: editorConfig.fontSize,\n            tabSize: editorConfig.tabSize,\n            wordWrap: editorConfig.wordWrap,\n            minimap: editorConfig.minimap,\n            readOnly,\n            lineNumbers: 'on',\n            roundedSelection: false,\n            scrollBeyondLastLine: false,\n            automaticLayout: true,\n            padding: { top: 8, bottom: 8 },\n            // Fix Enter key behavior - ensure it creates new lines\n            acceptSuggestionOnEnter: 'on',\n            quickSuggestions: true,\n            suggestOnTriggerCharacters: true,\n            // Ensure proper keyboard handling\n            multiCursorModifier: 'ctrlCmd',\n            // Configure scrolling behavior\n            scrollbar: {\n              vertical: 'auto',\n              horizontal: 'auto',\n              verticalScrollbarSize: 8,\n              horizontalScrollbarSize: 8,\n              useShadows: false,\n              verticalHasArrows: false,\n              horizontalHasArrows: false,\n            },\n            // Prevent focus issues\n            domReadOnly: false,\n            // Ensure proper keyboard handling\n            contextmenu: true,\n            mouseWheelZoom: false,\n            // Enable smooth scrolling\n            smoothScrolling: true,\n            // Configure line height for better scrolling\n            lineHeight: 1.5,\n          }}\n        />\n      </div>\n\n      {/* Run Results */}\n      {lastRunResult && (\n        <div className=\"border-t border-gray-200 dark:border-slate-600 bg-gray-50 dark:bg-slate-700 p-4 max-h-48 overflow-y-auto\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <div className={cn(\n              \"w-2 h-2 rounded-full\",\n              lastRunResult.success ? \"bg-green-500\" : \"bg-red-500\"\n            )} />\n            <span className=\"font-medium text-slate-900 dark:text-slate-100\">\n              {lastRunResult.success ? 'Tests Passed' : 'Tests Failed'}\n            </span>\n          </div>\n          \n          {lastRunResult.output && (\n            <div className=\"mb-2\">\n              <div className=\"text-sm font-medium text-slate-700 dark:text-slate-300 mb-1\">Output:</div>\n              <pre className=\"text-xs bg-white dark:bg-slate-800 p-2 rounded border border-gray-200 dark:border-slate-600 overflow-x-auto text-slate-900 dark:text-slate-100\">\n                {lastRunResult.output}\n              </pre>\n            </div>\n          )}\n          \n          {lastRunResult.error && (\n            <div className=\"mb-2\">\n              <div className=\"text-sm font-medium text-red-700 dark:text-red-400 mb-1\">Error:</div>\n              <pre className=\"text-xs bg-red-50 dark:bg-red-900/20 p-2 rounded border border-red-200 dark:border-red-800 text-red-800 dark:text-red-300 overflow-x-auto\">\n                {lastRunResult.error}\n              </pre>\n            </div>\n          )}\n          \n          {lastRunResult.testResults.length > 0 && (\n            <div>\n              <div className=\"text-sm font-medium text-slate-700 dark:text-slate-300 mb-1\">Test Results:</div>\n              <div className=\"space-y-1\">\n                {lastRunResult.testResults.map((result, index) => (\n                  <div\n                    key={index}\n                    className={cn(\n                      \"text-xs p-2 rounded\",\n                      result.passed\n                        ? \"bg-green-50 text-green-800\"\n                        : \"bg-red-50 text-red-800\"\n                    )}\n                  >\n                    Test {index + 1}: {result.passed ? 'PASSED' : 'FAILED'}\n                    {result.errorMessage && (\n                      <div className=\"mt-1 text-red-600\">\n                        {result.errorMessage}\n                      </div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 719, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/lib/judge0-api.ts"],"sourcesContent":["// Judge0 API integration for real code execution\n// Free tier: 1000 requests/day, 100 requests/minute\n\ninterface Judge0Submission {\n  language_id: number;\n  source_code: string;\n  stdin?: string;\n  expected_output?: string;\n}\n\ninterface Judge0Result {\n  stdout: string | null;\n  stderr: string | null;\n  compile_output: string | null;\n  message: string | null;\n  time: string;\n  memory: number;\n  status: {\n    id: number;\n    description: string;\n  };\n}\n\ninterface Judge0Response {\n  token: string;\n}\n\n// Language mapping to Judge0 language IDs\nexport const JUDGE0_LANGUAGES = {\n  javascript: 63,    // Node.js\n  typescript: 74,    // TypeScript\n  python: 71,        // Python 3\n  java: 62,          // Java\n  cpp: 54,           // C++ 17\n  c: 50,             // C\n  csharp: 51,        // C#\n  go: 60,            // Go\n  rust: 73,          // Rust\n  php: 68,           // PHP\n  ruby: 72,          // Ruby\n  swift: 83,         // Swift\n  kotlin: 78,        // Kotlin\n} as const;\n\nexport class Judge0API {\n  private baseUrl: string;\n  private apiKey: string | null;\n\n  constructor() {\n    // Using Judge0 RapidAPI (more reliable than free tier)\n    this.baseUrl = 'https://judge0-ce.p.rapidapi.com';\n    this.apiKey = process.env.NEXT_PUBLIC_RAPIDAPI_KEY || null;\n  }\n\n  async submitCode(\n    code: string,\n    language: string,\n    testCases: Array<{ input: string; expectedOutput: string }>\n  ): Promise<{\n    success: boolean;\n    results: Array<{\n      passed: boolean;\n      input: string;\n      expectedOutput: string;\n      actualOutput: string;\n      error?: string;\n      runtime?: number;\n      memory?: number;\n    }>;\n    error?: string;\n  }> {\n    try {\n      const languageId = JUDGE0_LANGUAGES[language as keyof typeof JUDGE0_LANGUAGES];\n      if (!languageId) {\n        throw new Error(`Unsupported language: ${language}`);\n      }\n\n      const results = [];\n      let allPassed = true;\n\n      // Execute each test case\n      for (const testCase of testCases) {\n        try {\n          const result = await this.executeTestCase(code, languageId, testCase.input);\n          \n          const passed = result.stdout?.trim() === testCase.expectedOutput.trim();\n          if (!passed) allPassed = false;\n\n          results.push({\n            passed,\n            input: testCase.input,\n            expectedOutput: testCase.expectedOutput,\n            actualOutput: result.stdout || '',\n            error: result.stderr || result.compile_output || result.message,\n            runtime: parseFloat(result.time) * 1000, // Convert to milliseconds\n            memory: result.memory,\n          });\n        } catch (error) {\n          allPassed = false;\n          results.push({\n            passed: false,\n            input: testCase.input,\n            expectedOutput: testCase.expectedOutput,\n            actualOutput: '',\n            error: error instanceof Error ? error.message : 'Unknown error',\n          });\n        }\n      }\n\n      return {\n        success: allPassed,\n        results,\n      };\n    } catch (error) {\n      return {\n        success: false,\n        results: [],\n        error: error instanceof Error ? error.message : 'Code execution failed',\n      };\n    }\n  }\n\n  private async executeTestCase(\n    code: string,\n    languageId: number,\n    input: string\n  ): Promise<Judge0Result> {\n    // Submit code for execution\n    const submission: Judge0Submission = {\n      language_id: languageId,\n      source_code: code,\n      stdin: input,\n    };\n\n    const submitResponse = await fetch(`${this.baseUrl}/submissions`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-RapidAPI-Key': this.apiKey || '',\n        'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com',\n      },\n      body: JSON.stringify(submission),\n    });\n\n    if (!submitResponse.ok) {\n      throw new Error(`Submission failed: ${submitResponse.statusText}`);\n    }\n\n    const { token }: Judge0Response = await submitResponse.json();\n\n    // Poll for result\n    return await this.pollResult(token);\n  }\n\n  private async pollResult(token: string, maxAttempts = 30): Promise<Judge0Result> {\n    for (let attempt = 0; attempt < maxAttempts; attempt++) {\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second\n\n      const response = await fetch(`${this.baseUrl}/submissions/${token}`, {\n        headers: {\n          'X-RapidAPI-Key': this.apiKey || '',\n          'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get result: ${response.statusText}`);\n      }\n\n      const result: Judge0Result = await response.json();\n\n      // Check if execution is complete\n      if (result.status.id <= 2) {\n        // Still processing (1: In Queue, 2: Processing)\n        continue;\n      }\n\n      return result;\n    }\n\n    throw new Error('Code execution timeout');\n  }\n\n  // Get supported languages\n  async getLanguages(): Promise<Array<{ id: number; name: string }>> {\n    try {\n      const response = await fetch(`${this.baseUrl}/languages`, {\n        headers: {\n          'X-RapidAPI-Key': this.apiKey || '',\n          'X-RapidAPI-Host': 'judge0-ce.p.rapidapi.com',\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get languages: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Failed to fetch languages:', error);\n      return [];\n    }\n  }\n}\n\nexport const judge0API = new Judge0API();\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 866, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/lib/api.ts"],"sourcesContent":["import type { \n  APIResponse, \n  PaginatedResponse, \n  Problem, \n  Submission, \n  AIRequest, \n  AIResponse,\n  ProblemFilters,\n  RunResult \n} from '../types';\nimport { judge0API } from './judge0-api';\n\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || '/api';\n\nclass APIError extends Error {\n  constructor(\n    message: string,\n    public status: number,\n    public code?: string\n  ) {\n    super(message);\n    this.name = 'APIError';\n  }\n}\n\nasync function handleResponse<T>(response: Response): Promise<T> {\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new APIError(\n      errorData.message || `HTTP ${response.status}`,\n      response.status,\n      errorData.code\n    );\n  }\n  \n  return response.json();\n}\n\n// Problems API\nexport const problemsAPI = {\n  async getProblems(filters: ProblemFilters = {}): Promise<PaginatedResponse<Problem>> {\n    const params = new URLSearchParams();\n    \n    if (filters.difficulty) params.append('difficulty', filters.difficulty);\n    if (filters.tags?.length) params.append('tags', filters.tags.join(','));\n    if (filters.search) params.append('search', filters.search);\n    if (filters.type) params.append('type', filters.type);\n    if (filters.category) params.append('category', filters.category);\n    if (filters.aiAllowed !== undefined) params.append('aiAllowed', filters.aiAllowed.toString());\n    if (filters.duration) params.append('duration', filters.duration);\n    if (filters.page) params.append('page', filters.page.toString());\n    if (filters.limit) params.append('limit', filters.limit.toString());\n    \n    const response = await fetch(`${API_BASE_URL}/problems?${params}`);\n    return handleResponse<PaginatedResponse<Problem>>(response);\n  },\n  \n  async getProblem(slug: string): Promise<APIResponse<Problem>> {\n    const response = await fetch(`${API_BASE_URL}/problems/${slug}`);\n    return handleResponse<APIResponse<Problem>>(response);\n  },\n  \n  async getProblemTags(): Promise<APIResponse<string[]>> {\n    const response = await fetch(`${API_BASE_URL}/problems/tags`);\n    return handleResponse<APIResponse<string[]>>(response);\n  },\n};\n\n// Submissions API\nexport const submissionsAPI = {\n  async getSubmissions(problemId?: string): Promise<APIResponse<Submission[]>> {\n    const params = problemId ? `?problemId=${problemId}` : '';\n    const response = await fetch(`${API_BASE_URL}/submissions${params}`);\n    return handleResponse<APIResponse<Submission[]>>(response);\n  },\n  \n  async createSubmission(data: {\n    problemId: string;\n    code: string;\n    language: string;\n  }): Promise<APIResponse<Submission>> {\n    const response = await fetch(`${API_BASE_URL}/submissions`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    return handleResponse<APIResponse<Submission>>(response);\n  },\n  \n  async getSubmission(id: string): Promise<APIResponse<Submission>> {\n    const response = await fetch(`${API_BASE_URL}/submissions/${id}`);\n    return handleResponse<APIResponse<Submission>>(response);\n  },\n};\n\n// Test Runner API with real code execution support\nexport const runnerAPI = {\n  async runTests(data: {\n    problemId: string;\n    code: string;\n    language: string;\n  }): Promise<APIResponse<RunResult>> {\n    // Check if we should use real code execution\n    const useRealExecution = process.env.NEXT_PUBLIC_USE_REAL_EXECUTION === 'true';\n    \n    if (useRealExecution) {\n      try {\n        // Get problem details to extract test cases\n        const problemResponse = await problemsAPI.getProblem(data.problemId);\n        if (!problemResponse.success || !problemResponse.data) {\n          throw new APIError('Failed to load problem details', 404);\n        }\n\n        const problem: Problem = problemResponse.data;\n        const testCases = problem.canonicalTestCases.map(tc => ({\n          input: tc.input,\n          expectedOutput: tc.expectedOutput,\n        }));\n\n        // Execute code using Judge0\n        const result = await judge0API.submitCode(\n          data.code,\n          data.language,\n          testCases\n        );\n\n        if (!result.success) {\n          throw new APIError(result.error || 'Code execution failed', 500);\n        }\n\n        // Convert Judge0 results to our format\n        const runResult: RunResult = {\n          success: result.results.every(r => r.passed),\n          output: result.results.map(r => \n            `Input: ${r.input}\\nExpected: ${r.expectedOutput}\\nActual: ${r.actualOutput}${r.error ? `\\nError: ${r.error}` : ''}`\n          ).join('\\n\\n'),\n          error: result.results.some(r => r.error) ? \n            result.results.find(r => r.error)?.error : undefined,\n          testResults: result.results.map((r, index) => ({\n            testCaseId: `test-${index + 1}`,\n            testCase: index + 1,\n            passed: r.passed,\n            input: r.input,\n            expectedOutput: r.expectedOutput,\n            actualOutput: r.actualOutput,\n            error: r.error,\n          })),\n          runtime: result.results.reduce((sum, r) => sum + (r.runtime || 0), 0),\n          memory: Math.max(...result.results.map(r => r.memory || 0)),\n        };\n\n        return { success: true, data: runResult };\n      } catch (error) {\n        console.error('Real code execution failed, falling back to mock:', error);\n        // Fall back to mock execution\n        return this.mockRunTests(data);\n      }\n    } else {\n      // Use mock execution for development\n      return this.mockRunTests(data);\n    }\n  },\n\n  // Mock execution for development\n  async mockRunTests(data: {\n    problemId: string;\n    code: string;\n    language: string;\n  }): Promise<APIResponse<RunResult>> {\n    const response = await fetch(`${API_BASE_URL}/run`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    });\n    return handleResponse<APIResponse<RunResult>>(response);\n  },\n};\n\n// AI Helper API\nexport const aiAPI = {\n  async askQuestion(request: AIRequest): Promise<APIResponse<AIResponse>> {\n    const response = await fetch(`${API_BASE_URL}/ai/ask`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(request),\n    });\n    return handleResponse<APIResponse<AIResponse>>(response);\n  },\n  \n  async escalateRequest(problemId: string, credits: number): Promise<APIResponse<{ success: boolean; creditsRemaining: number }>> {\n    const response = await fetch(`${API_BASE_URL}/ai/escalate`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ problemId, credits }),\n    });\n    return handleResponse<APIResponse<{ success: boolean; creditsRemaining: number }>>(response);\n  },\n};\n\n// Auth API\nexport const authAPI = {\n  async getCurrentUser(): Promise<APIResponse<unknown>> {\n    const response = await fetch(`${API_BASE_URL}/auth/me`);\n    return handleResponse<APIResponse<unknown>>(response);\n  },\n  \n  async login(credentials: { email: string; password: string }): Promise<APIResponse<unknown>> {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(credentials),\n    });\n    return handleResponse<APIResponse<unknown>>(response);\n  },\n  \n  async logout(): Promise<APIResponse<void>> {\n    const response = await fetch(`${API_BASE_URL}/auth/logout`, {\n      method: 'POST',\n    });\n    return handleResponse<APIResponse<void>>(response);\n  },\n};\n\nexport { APIError };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1059, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/components/ai/ai-helper-panel.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { X, Send, AlertTriangle, CheckCircle, Clock } from 'lucide-react';\nimport { cn } from '../../lib/utils';\nimport { useAppStore } from '../../lib/store';\nimport { aiAPI } from '../../lib/api';\nimport type { AIInteraction, AssistanceLevel, AIRequest } from '../../types';\n\ninterface AIHelperPanelProps {\n  problemId: string;\n  isOpen: boolean;\n  onClose: () => void;\n  className?: string;\n}\n\nconst assistanceLevels: { value: AssistanceLevel; label: string; description: string }[] = [\n  {\n    value: 'hint',\n    label: 'Hint',\n    description: 'Conceptual hints, algorithm outline, key edge cases'\n  },\n  {\n    value: 'guided',\n    label: 'Guided',\n    description: 'Detailed walkthrough, structured pseudocode, short snippets'\n  },\n  {\n    value: 'walkthrough',\n    label: 'Walkthrough',\n    description: 'Detailed plan, decomposition, targeted snippets'\n  }\n];\n\nexport function AIHelperPanel({ problemId, onClose }: AIHelperPanelProps) {\n  const [question, setQuestion] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [conversation, setConversation] = useState<AIInteraction[]>([]);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  \n  const { aiHelper, setAILoading, addAIInteraction } = useAppStore();\n  const { currentLevel } = aiHelper;\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [conversation]);\n\n  const handleAskQuestion = async () => {\n    if (!question.trim() || isLoading) return;\n\n    const userQuestion = question.trim();\n    setQuestion('');\n    setIsLoading(true);\n    setAILoading(true);\n\n    try {\n      const request: AIRequest = {\n        problemId,\n        question: userQuestion,\n        assistanceLevel: currentLevel,\n      };\n\n      const response = await aiAPI.askQuestion(request);\n      \n      if (response.success) {\n        const interaction: AIInteraction = {\n          id: Date.now().toString(),\n          problemId,\n          userId: 'current-user', // This would come from auth context\n          assistanceLevel: currentLevel,\n          question: userQuestion,\n          aiResponse: response.data.response,\n          confidenceEstimate: response.data.confidenceEstimate,\n          complianceBadge: response.data.complianceBadge,\n          timestamp: new Date().toISOString(),\n        };\n\n        setConversation(prev => [...prev, interaction]);\n        addAIInteraction(interaction);\n      }\n    } catch (error) {\n      console.error('AI request failed:', error);\n      // Handle error - maybe show a toast\n    } finally {\n      setIsLoading(false);\n      setAILoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleAskQuestion();\n    }\n  };\n\n  const getComplianceIcon = (badge: string) => {\n    switch (badge) {\n      case 'compliant':\n        return <CheckCircle className=\"w-4 h-4 text-green-500\" />;\n      case 'partial':\n        return <AlertTriangle className=\"w-4 h-4 text-yellow-500\" />;\n      case 'violation':\n        return <AlertTriangle className=\"w-4 h-4 text-red-500\" />;\n      default:\n        return null;\n    }\n  };\n\n  const getComplianceText = (badge: string) => {\n    switch (badge) {\n      case 'compliant':\n        return 'Compliant — no full code';\n      case 'partial':\n        return 'Partial — no full code';\n      case 'violation':\n        return 'Content filtered';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full w-[25%] bg-white dark:bg-slate-800 border-l border-gray-200 dark:border-slate-700\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-slate-700\">\n        <div>\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">AI Helper</h3>\n          <p className=\"text-sm text-slate-600 dark:text-slate-400\">\n            {assistanceLevels.find(level => level.value === currentLevel)?.description}\n          </p>\n        </div>\n        <button\n          onClick={onClose}\n          className=\"p-2 text-slate-400 hover:text-slate-600 dark:hover:text-slate-300 rounded-md hover:bg-gray-100 dark:hover:bg-slate-700\"\n        >\n          <X className=\"w-5 h-5\" />\n        </button>\n      </div>\n\n      {/* Assistance Level Selector */}\n      <div className=\"p-4 border-b border-gray-200 dark:border-slate-700 bg-yellow-50 dark:bg-yellow-900/20\">\n        <div className=\"text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">Assistance Level</div>\n        <div className=\"flex gap-2\">\n          {assistanceLevels.map((level) => (\n            <button\n              key={level.value}\n              onClick={() => useAppStore.getState().setAIAssistanceLevel(level.value)}\n              className={cn(\n                \"px-3 py-1 text-xs rounded-full border transition-colors\",\n                currentLevel === level.value\n                  ? \"bg-blue-500 text-white border-blue-500\"\n                  : \"bg-white dark:bg-slate-700 text-slate-700 dark:text-slate-300 border-gray-300 dark:border-slate-600 hover:bg-gray-50 dark:hover:bg-slate-600\"\n              )}\n            >\n              {level.label}\n            </button>\n          ))}\n        </div>\n        <div className=\"mt-2 text-xs text-red-600 dark:text-red-400 font-medium\">\n          ⚠️ AI WILL NOT PROVIDE FULL CODE\n        </div>\n      </div>\n\n      {/* Conversation */}\n      <div className=\"flex-1 overflow-y-auto p-2 space-y-4\">\n        {conversation.length === 0 ? (\n          <div className=\"text-center text-slate-500 dark:text-slate-400 py-8\">\n            <div className=\"text-sm\">\n              Ask a focused question about the problem.\n            </div>\n            <div className=\"text-xs mt-1\">\n              Reminder: full solutions are withheld.\n            </div>\n          </div>\n        ) : (\n          conversation.map((interaction) => (\n            <div key={interaction.id} className=\"space-y-3\">\n              {/* User Question */}\n              <div className=\"bg-blue-50 dark:bg-blue-900/20 p-3 rounded-lg\">\n                <div className=\"text-sm font-medium text-blue-900 dark:text-blue-300 mb-1\">You asked:</div>\n                <div className=\"text-sm text-blue-800 dark:text-blue-200\">{interaction.question}</div>\n              </div>\n\n              {/* AI Response */}\n              <div className=\"bg-gray-50 dark:bg-slate-700 p-3 rounded-lg\">\n                <div className=\"flex items-center gap-2 mb-2\">\n                  <div className=\"text-sm font-medium text-slate-900 dark:text-slate-100\">AI Response:</div>\n                  {getComplianceIcon(interaction.complianceBadge)}\n                  <span className=\"text-xs text-slate-600 dark:text-slate-400\">\n                    {getComplianceText(interaction.complianceBadge)}\n                  </span>\n                </div>\n                <div className=\"text-sm text-slate-800 dark:text-slate-200 whitespace-pre-wrap\">\n                  {interaction.aiResponse}\n                </div>\n                <div className=\"flex items-center justify-between mt-2 text-xs text-slate-500 dark:text-slate-400\">\n                  <span>Confidence: {interaction.confidenceEstimate}%</span>\n                  <span>{new Date(interaction.timestamp).toLocaleTimeString()}</span>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        \n        {isLoading && (\n          <div className=\"flex items-center gap-2 text-slate-500 dark:text-slate-400\">\n            <Clock className=\"w-4 h-4 animate-spin\" />\n            <span className=\"text-sm\">AI is thinking...</span>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input */}\n      <div className=\"p-2 border-t border-gray-200 dark:border-slate-700 bg-gray-50 dark:bg-slate-700\">\n        <div className=\"flex gap-2\">\n          <textarea\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Ask a focused question about the problem...\"\n            className=\"flex-1 p-2 text-sm border border-gray-300 dark:border-slate-600 rounded resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-slate-800 text-slate-900 dark:text-slate-100 placeholder-slate-500 dark:placeholder-slate-400\"\n            rows={2}\n            disabled={isLoading}\n          />\n          <button\n            onClick={handleAskQuestion}\n            disabled={!question.trim() || isLoading}\n            className=\"px-3 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed\"\n          >\n            <Send className=\"w-4 h-4\" />\n          </button>\n        </div>\n        \n        <div className=\"mt-2 text-xs text-slate-500 dark:text-slate-400\">\n          Press Enter to send, Shift+Enter for new line\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1527, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"default\" | \"destructive\" | \"outline\" | \"secondary\" | \"ghost\" | \"link\";\n  size?: \"default\" | \"sm\" | \"lg\" | \"icon\";\n  loading?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = \"default\", size = \"default\", loading, children, disabled, ...props }, ref) => {\n    const baseClasses = \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\";\n    \n    const variants = {\n      default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n      destructive: \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n      outline: \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n      secondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n      ghost: \"hover:bg-accent hover:text-accent-foreground\",\n      link: \"text-primary underline-offset-4 hover:underline\",\n    };\n    \n    const sizes = {\n      default: \"h-10 px-4 py-2\",\n      sm: \"h-9 rounded-md px-3\",\n      lg: \"h-11 rounded-md px-8\",\n      icon: \"h-10 w-10\",\n    };\n    \n    return (\n      <button\n        className={cn(\n          baseClasses,\n          variants[variant],\n          sizes[size],\n          className\n        )}\n        ref={ref}\n        disabled={disabled || loading}\n        {...props}\n      >\n        {loading && (\n          <svg\n            className=\"mr-2 h-4 w-4 animate-spin\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n        )}\n        {children}\n      </button>\n    );\n  }\n);\nButton.displayName = \"Button\";\n\nexport { Button };\n"],"names":[],"mappings":";;;;;AAAA;AACA;;;;AASA,MAAM,uBAAS,yNAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;IAC5F,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,SAAS;QACT,aAAa;QACb,SAAS;QACT,WAAW;QACX,OAAO;QACP,MAAM;IACR;IAEA,MAAM,QAAQ;QACZ,SAAS;QACT,IAAI;QACJ,IAAI;QACJ,MAAM;IACR;IAEA,qBACE,oPAAC;QACC,WAAW,IAAA,6IAAE,EACX,aACA,QAAQ,CAAC,QAAQ,EACjB,KAAK,CAAC,KAAK,EACX;QAEF,KAAK;QACL,UAAU,YAAY;QACrB,GAAG,KAAK;;YAER,yBACC,oPAAC;gBACC,WAAU;gBACV,OAAM;gBACN,MAAK;gBACL,SAAQ;;kCAER,oPAAC;wBACC,WAAU;wBACV,IAAG;wBACH,IAAG;wBACH,GAAE;wBACF,QAAO;wBACP,aAAY;;;;;;kCAEd,oPAAC;wBACC,WAAU;wBACV,MAAK;wBACL,GAAE;;;;;;;;;;;;YAIP;;;;;;;AAGP;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1606, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/lib/query-client.ts"],"sourcesContent":["// Query keys factory\nexport const queryKeys = {\n  problems: {\n    all: ['problems'] as const,\n    lists: () => [...queryKeys.problems.all, 'list'] as const,\n    list: (filters: unknown) => [...queryKeys.problems.lists(), filters] as const,\n    details: () => [...queryKeys.problems.all, 'detail'] as const,\n    detail: (slug: string) => [...queryKeys.problems.details(), slug] as const,\n    tags: () => [...queryKeys.problems.all, 'tags'] as const,\n  },\n  submissions: {\n    all: ['submissions'] as const,\n    lists: () => [...queryKeys.submissions.all, 'list'] as const,\n    list: (problemId?: string) => [...queryKeys.submissions.lists(), { problemId }] as const,\n    details: () => [...queryKeys.submissions.all, 'detail'] as const,\n    detail: (id: string) => [...queryKeys.submissions.details(), id] as const,\n  },\n  user: {\n    all: ['user'] as const,\n    profile: () => [...queryKeys.user.all, 'profile'] as const,\n  },\n} as const;\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACd,MAAM,YAAY;IACvB,UAAU;QACR,KAAK;YAAC;SAAW;QACjB,OAAO,IAAM;mBAAI,UAAU,QAAQ,CAAC,GAAG;gBAAE;aAAO;QAChD,MAAM,CAAC,UAAqB;mBAAI,UAAU,QAAQ,CAAC,KAAK;gBAAI;aAAQ;QACpE,SAAS,IAAM;mBAAI,UAAU,QAAQ,CAAC,GAAG;gBAAE;aAAS;QACpD,QAAQ,CAAC,OAAiB;mBAAI,UAAU,QAAQ,CAAC,OAAO;gBAAI;aAAK;QACjE,MAAM,IAAM;mBAAI,UAAU,QAAQ,CAAC,GAAG;gBAAE;aAAO;IACjD;IACA,aAAa;QACX,KAAK;YAAC;SAAc;QACpB,OAAO,IAAM;mBAAI,UAAU,WAAW,CAAC,GAAG;gBAAE;aAAO;QACnD,MAAM,CAAC,YAAuB;mBAAI,UAAU,WAAW,CAAC,KAAK;gBAAI;oBAAE;gBAAU;aAAE;QAC/E,SAAS,IAAM;mBAAI,UAAU,WAAW,CAAC,GAAG;gBAAE;aAAS;QACvD,QAAQ,CAAC,KAAe;mBAAI,UAAU,WAAW,CAAC,OAAO;gBAAI;aAAG;IAClE;IACA,MAAM;QACJ,KAAK;YAAC;SAAO;QACb,SAAS,IAAM;mBAAI,UAAU,IAAI,CAAC,GAAG;gBAAE;aAAU;IACnD;AACF","debugId":null}},
    {"offset": {"line": 1674, "column": 0}, "map": {"version":3,"sources":["file:///Users/rhychaw/projects/oa/web-app/src/app/problems/%5Bslug%5D/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { useParams } from 'next/navigation';\nimport { Play, Save, Clock, CheckCircle, XCircle } from 'lucide-react';\nimport { EditorWrapper } from '../../../components/editor/editor-wrapper';\nimport { AIHelperPanel } from '../../../components/ai/ai-helper-panel';\nimport { Button } from '../../../components/ui/button';\nimport { problemsAPI, runnerAPI } from '../../../lib/api';\nimport { queryKeys } from '../../../lib/query-client';\nimport { useAppStore } from '../../../lib/store';\nimport { cn, formatRuntime, formatMemory } from '../../../lib/utils';\nimport type { RunResult } from '../../../types';\n\nexport default function ProblemPage() {\n  const params = useParams();\n  const slug = params.slug as string;\n  \n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('javascript');\n  const [runResult, setRunResult] = useState<RunResult | null>(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const { setEditorState, getEditorState } = useAppStore();\n\n  const { data: problemData, isLoading, error } = useQuery({\n    queryKey: queryKeys.problems.detail(slug),\n    queryFn: () => problemsAPI.getProblem(slug),\n    enabled: !!slug,\n  });\n\n  const problem = problemData?.data;\n\n  // Load saved editor state\n  useEffect(() => {\n    if (problem) {\n      const savedState = getEditorState(problem.id);\n      if (savedState) {\n        setCode(savedState.code);\n        setLanguage(savedState.language);\n      }\n    }\n  }, [problem, getEditorState]);\n\n  // Save editor state\n  const handleCodeChange = (newCode: string) => {\n    setCode(newCode);\n    if (problem) {\n      setEditorState(problem.id, {\n        code: newCode,\n        language,\n        isDirty: newCode !== '',\n      });\n    }\n  };\n\n  const handleRun = async (codeToRun: string, languageToRun: string): Promise<RunResult> => {\n    if (!problem) throw new Error('Problem not loaded');\n\n    setIsRunning(true);\n    try {\n      const response = await runnerAPI.runTests({\n        problemId: problem.id,\n        code: codeToRun,\n        language: languageToRun,\n      });\n\n      if (response.success) {\n        setRunResult(response.data);\n        return response.data;\n      } else {\n        throw new Error(response.message || 'Run failed');\n      }\n    } finally {\n      setIsRunning(false);\n    }\n  };\n\n  const handleSave = (codeToSave: string) => {\n    if (problem) {\n      setEditorState(problem.id, {\n        code: codeToSave,\n        language,\n        isDirty: false,\n        lastSaved: new Date().toISOString(),\n      });\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!problem || !code.trim()) return;\n\n    setIsSubmitting(true);\n    try {\n      // First run tests to make sure they pass\n      const result = await handleRun(code, language);\n      \n      if (!result.success) {\n        alert('Please fix all test cases before submitting.');\n        return;\n      }\n\n      // TODO: Implement actual submission\n      console.log('Submitting solution:', { problemId: problem.id, code, language });\n      alert('Submission successful! (This is a demo)');\n    } catch (error) {\n      console.error('Submission failed:', error);\n      alert('Submission failed. Please try again.');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-slate-900\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\n          <p className=\"text-slate-600 dark:text-slate-400\">Loading problem...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !problem) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-slate-900\">\n        <div className=\"text-center\">\n          <h2 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100 mb-2\">Problem Not Found</h2>\n          <p className=\"text-slate-600 dark:text-slate-400 mb-4\">The problem you&apos;re looking for doesn&apos;t exist.</p>\n          <Button onClick={() => window.history.back()}>\n            Go Back\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-slate-900 flex\">\n      {/* Problem Statement - Left Side (30%) */}\n      <div className=\"w-[30%] bg-white dark:bg-slate-800 border-r border-gray-200 dark:border-slate-700 overflow-y-auto\">\n        <div className=\"p-6 space-y-6\">\n          {/* Header */}\n          <div>\n            <div className=\"mb-4\">\n              <h1 className=\"text-2xl font-bold text-slate-900 dark:text-slate-100 mb-2\">{problem.title}</h1>\n              <div className=\"flex items-center gap-4 text-sm text-slate-600 dark:text-slate-400\">\n                <span className={cn(\n                  \"px-2 py-1 rounded-full text-xs font-medium\",\n                  problem.difficulty === 'easy' && \"bg-green-100 text-green-800\",\n                  problem.difficulty === 'medium' && \"bg-yellow-100 text-yellow-800\",\n                  problem.difficulty === 'hard' && \"bg-red-100 text-red-800\"\n                )}>\n                  {problem.difficulty.charAt(0).toUpperCase() + problem.difficulty.slice(1)}\n                </span>\n                <span>{problem.points} points</span>\n                {problem.timeLimit && (\n                  <span className=\"flex items-center gap-1\">\n                    <Clock className=\"w-4 h-4\" />\n                    {problem.timeLimit}s\n                  </span>\n                )}\n              </div>\n            </div>\n\n            {/* Tags */}\n            <div className=\"flex flex-wrap gap-2 mb-4\">\n              {problem.tags.map((tag) => (\n                <span\n                  key={tag}\n                  className=\"px-2 py-1 bg-gray-100 dark:bg-slate-700 text-slate-700 dark:text-slate-300 text-xs rounded-md\"\n                >\n                  {tag}\n                </span>\n              ))}\n            </div>\n\n            {/* Description */}\n            <div \n              className=\"prose prose-sm max-w-none prose-slate dark:prose-invert\"\n              dangerouslySetInnerHTML={{ __html: problem.description }}\n            />\n          </div>\n\n          {/* Test Cases */}\n          {problem.canonicalTestCases.length > 0 && (\n            <div>\n              <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100 mb-4\">Test Cases</h3>\n              <div className=\"space-y-4\">\n                {problem.canonicalTestCases.slice(0, 3).map((testCase, index) => (\n                  <div key={testCase.id} className=\"border border-gray-200 dark:border-slate-600 rounded-lg p-4\">\n                    <div className=\"text-sm font-medium text-slate-700 dark:text-slate-300 mb-2\">\n                      Test Case {index + 1}\n                      {testCase.visibility === 'private' && (\n                        <span className=\"ml-2 text-xs text-slate-500 dark:text-slate-400\">(Hidden)</span>\n                      )}\n                    </div>\n                    <div className=\"grid grid-cols-1 gap-4 text-sm\">\n                      <div>\n                        <div className=\"font-medium text-slate-600 dark:text-slate-400 mb-1\">Input:</div>\n                        <pre className=\"bg-gray-50 dark:bg-slate-700 p-2 rounded text-xs overflow-x-auto text-slate-900 dark:text-slate-100\">\n                          {testCase.input}\n                        </pre>\n                      </div>\n                      <div>\n                        <div className=\"font-medium text-slate-600 dark:text-slate-400 mb-1\">Expected Output:</div>\n                        <pre className=\"bg-gray-50 dark:bg-slate-700 p-2 rounded text-xs overflow-x-auto text-slate-900 dark:text-slate-100\">\n                          {testCase.expectedOutput}\n                        </pre>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                {problem.canonicalTestCases.length > 3 && (\n                  <div className=\"text-sm text-slate-500 dark:text-slate-400 text-center\">\n                    +{problem.canonicalTestCases.length - 3} more test cases\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Editor - Middle (45%) */}\n      <div className=\"w-[45%] flex flex-col p-6\">\n        {/* Editor Controls */}\n        <div className=\"flex items-center justify-between mb-4\">\n          <div className=\"flex items-center gap-4\">\n            <Button\n              onClick={() => handleRun(code, language)}\n              disabled={isRunning || !code.trim()}\n              loading={isRunning}\n              className=\"flex items-center gap-2\"\n            >\n              <Play className=\"w-4 h-4\" />\n              Run Tests\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              disabled={isSubmitting || !code.trim() || !runResult?.success}\n              loading={isSubmitting}\n              className=\"flex items-center gap-2\"\n            >\n              <Save className=\"w-4 h-4\" />\n              Submit Solution\n            </Button>\n          </div>\n        </div>\n\n        {/* Editor */}\n        <div className=\"flex-1 bg-white dark:bg-slate-800 rounded-lg shadow-sm border border-gray-200 dark:border-slate-700 overflow-hidden\">\n          <EditorWrapper\n            initialCode={code}\n            language={language}\n            onChange={handleCodeChange}\n            onRun={handleRun}\n            onSave={handleSave}\n            problemId={problem.id}\n            className=\"h-full\"\n          />\n        </div>\n\n        {/* Run Results */}\n        {runResult && (\n          <div className=\"mt-4 bg-white dark:bg-slate-800 rounded-lg shadow-sm border border-gray-200 dark:border-slate-700 p-4\">\n            <div className=\"flex items-center gap-2 mb-4\">\n              {runResult.success ? (\n                <CheckCircle className=\"w-5 h-5 text-green-500\" />\n              ) : (\n                <XCircle className=\"w-5 h-5 text-red-500\" />\n              )}\n              <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\n                {runResult.success ? 'All Tests Passed!' : 'Tests Failed'}\n              </h3>\n            </div>\n\n            {runResult.testResults.length > 0 && (\n              <div className=\"space-y-2 mb-4\">\n                {runResult.testResults.map((result, index) => (\n                  <div\n                    key={index}\n                    className={cn(\n                      \"flex items-center justify-between p-3 rounded-lg\",\n                      result.passed\n                        ? \"bg-green-50 text-green-800\"\n                        : \"bg-red-50 text-red-800\"\n                    )}\n                  >\n                    <span className=\"font-medium\">Test {index + 1}</span>\n                    <div className=\"flex items-center gap-2\">\n                      {result.passed ? (\n                        <CheckCircle className=\"w-4 h-4\" />\n                      ) : (\n                        <XCircle className=\"w-4 h-4\" />\n                      )}\n                      <span className=\"text-sm\">\n                        {result.passed ? 'PASSED' : 'FAILED'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            {runResult.runtime && (\n              <div className=\"text-sm text-slate-600 dark:text-slate-400\">\n                Runtime: {formatRuntime(runResult.runtime)}\n                {runResult.memory && ` • Memory: ${formatMemory(runResult.memory)}`}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* AI Helper - Always Visible Right Side */}\n      <AIHelperPanel\n        problemId={problem.id}\n        isOpen={true}\n        onClose={() => {}}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}